inline
inline int max(int a,int b){return a>=b?a:b;}//如果不是int型先把a,b强制转换为int型，比较后返回int型的数
#define max(a,b) (a>b?a:b)//只是比较而已//但是define可以用括号，inline不可以 
inline int check(int a,int b){return a>=0&&b>=0;} 
/*
inline是C++关键字，在函数声明或定义中，函数返回类型前加上关键字inline，即可以把函数指定为内联函数。
	这样可以解决一些频繁调用的函数大量消耗栈空间（栈内存）的问题。关键字inline必须与函数定义放在
	一起才能使函数成为内联函数，仅仅将inline放在函数声明前面不起任何作用。
inline关键字用来定义一个类的内联函数，引入它的主要原因是用它替代C中表达式形式的宏定义。

宏定义虽好
1	但不能进行参数有效性的检测 
2	其返回值也不能被强制转换为可转换的合适的类型
inline定义的类的内联函数，函数的代码被放入符号表中，在使用时直接进行替换（像宏一样展开），
1	没有了调用的开销，效率也很高。
2	编译器在调用一个内联函数时，会首先检查它的参数的类型，保证调用正确
3	inline可以作为某个类的成员函数
4	一般函数的代码段只有一份，放在内存中的某个位置上，当程序调用它是，指令就跳转过来；当下一次程序
	调用它是，指令又跳转过来；而内联函数是程序中调用几次内联函数，内联函数的代码就会复制几份放在对应的位置上
使用情况：
1.对于这类简单的、使用频繁的小函数，将之说明为内联函数可提高运行效率。
2.如果函数代码长或者函数内出现循环则不适合 
*/ 
